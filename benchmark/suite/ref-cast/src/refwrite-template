(letrec ([f : (Int -> Int) (lambda (x) x)]
         [cast-loop (lambda ([r : (GRef (Int -> Int))]
                             [i : Int])
                      (if (<= i 0)
                          r
                          (cast-loop (: r (GRef (Dyn -> Dyn))) (- i 1))))])
  (let ([r : (GRef (Int -> Int)) (gbox f)]
        [z : (Int -> Int) (lambda (y) y)])
    (repeat (i 0 CAST-COUNT)
            (let ([x (cast-loop r i)])
              (begin
                (timer-start)
                (repeat (u 0 OP-COUNT)
                        (gbox-set! x z))
                (timer-stop)
                (timer-report))))))
