(let ([size : Dyn 2000])
 (let ([a : Dyn (gvector size 1)])
  (begin
    (repeat (i 0 size)
    	    (gvector-set! a i (- size i)))
    (timer-start)
    (letrec ([sort : Dyn
                   (lambda (a p r)
                           (if (< p r)
                               (let ([q : Dyn (partition a p r)])
                                 (begin
                                   (sort a p (- q 1))
                                   (sort a (+ q 1) r)))
                               0))]
             [partition : Dyn
                        (lambda (a p r)
                                (let ([i : Dyn (gbox (- p 1))]
                                      [x : Dyn (gvector-ref a r)])
                                  (begin
                                    (repeat (j p r)
                                            (if (<= (gvector-ref a j) x)
                                                (begin
                                                  (gbox-set! i (+ (gunbox i) 1))
                                                  (swap a (gunbox i) j))
                                                0))
                                    (swap a (+ (gunbox i) 1) r)
                                    (+ (gunbox i) 1))))]
             [swap : Dyn
                   (lambda (a i j)
                           (if (= i j)
                               0
                               (let ([t : Dyn (gvector-ref a i)])
                                 (begin
                                   (gvector-set! a i (gvector-ref a j))
                                   (gvector-set! a j t)
                                   0))))])
      (sort a 0 (- size 1)))
    (timer-stop)
    (gvector-ref a (- size 1))
    (timer-report))))
