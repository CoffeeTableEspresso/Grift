(let ([size : Int 2000])
  (let ([a : (GVect Int) (gvector size 1)])
    (begin
      (repeat (i 0 size)
	      (gvector-set! a i (- size i)))
      (timer-start)
      (letrec ([sort : ((GVect Int) Int Int -> Int)
		     (lambda (a p r)
		       (if (< p r)
			   (let ([q : Int (partition a p r)])
			     (begin
			       (sort a p (- q 1))
			       (sort a (+ q 1) r)))
			   0))]
	       [partition : ((GVect Int) Int Int -> Int)
			  (lambda (a p r)
			    (let ([i : (GRef Int) (gbox (- p 1))]
				  [x : Int (gvector-ref a r)])
			      (begin
				(repeat (j p r)
					(if (<= (gvector-ref a j) x)
					    (begin
					      (gbox-set! i (+ (gunbox i) 1))
					      (swap a (gunbox i) j))
					    0))
				(swap a (+ (gunbox i) 1) r)
				(+ (gunbox i) 1))))]
	       [swap : ((GVect Int) Int Int -> Int)
		     (lambda (a i j)
		       (if (= i j)
			   0
			   (let ([t : Int (gvector-ref a i)])
			     (begin
			       (gvector-set! a i (gvector-ref a j))
			       (gvector-set! a j t)
			       0))))])
	(sort a 0 (- size 1)))
      (timer-stop)
      (gvector-ref a (- size 1))
      (timer-report))))
